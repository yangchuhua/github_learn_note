#########《莫烦PYTHON—GitHub教学》学习笔记###########
###2017-11-15
cd /Users/chuhuayang/GitHub
git config —global user.name “ych_git”  	#设置auther的名字
git config —global user.email “ych_git@qq.com”  	#防止重名，使用邮箱地址独一无二
clear  #清屏，向上翻动仍然可以看到之前的操作
git init  	#重新初始化/Users/chuhuayang/GitHub/.git/中的现有Git存储库
open .git  	#查看这个文件夹
touch git_learn_note.txt  	#新建一个空txt文件
git status  	#查看版本库的状态，课看到修改还没被提交的文件的信息
git add git_learn_note.txt  	#讲文件加入版本库中(untracked files 可用 git add命令加入版本库中)
git add .	#一次性添加GitHub文件夹下所有未被加入版本库的文件
git commit -m “creat git_learn_note.txt”	#提交本次的改变，并在-m后自定义改变的信息

git log	#查看修改记录
git add git_learn_note.txt	#把这次修改添加 (add) 到可被提交 (commit) 的状态
git commit -m "git_learn_note change 1"	#再提交 (commit) 这次的修改

git diff	#查看修改后未add的A文件，与已add但没有commit的A文件有何不同
git diff —cached	#查看修改后add却未commit的A文件，与已add+commit的A文件有何不同
git diff HEAD	#查看修改后未add的A文件，与已add+commit的A文件有何不同

#####commit 之间的往返
##修改已commit的版本
touch 2.py
git add 2.py
git commit —amend —-no-edit	#将2.py的这次修改添加到上一次已经commit的版本（不编辑直接合并到上一次，结果是版本不增加）
	##当多次修改又不希望版本太多时候，可以采用此方法，比如一整天修改十多次，可以放在同一个修改版本中，用日期命名。
git log --oneline	#只列出版所有本号+自定义信息

##reset 回到add之前
$ git status -s
M  git_learn_note.txt	#staged
$ git reset git_learn_note.txt	#从已add未commit，回到add之前的状态，可以继续修改然后再add
$ git status -s
 M git_learn_note.txt	#unstage



#########2017-11-16
########每个 commit 都有自己的 id 编号, HEAD 是一个指针, 指引当前的状态是在哪个 commit
##reset 回到不同commit，用—hard 编号
$git reset —-hard HEAD	#显示当前指针所在位置，
HEAD is now at 1bf0694 回到从前
$git log —-oneline	#显示所有版本号
1bf0694 回到从前
1546df9 learn log&diff
2dea039 git_learn_note change 1
444ece9 creat git_learn_note.txt
54c3414 change 2
a8e9f53 change 1
f4ee17d change 1
$ git reset --hard HEAD^	#回到倒数第二个版本,等价于git reset -—hard HEAD~1，git reset —-hard 1546df9
HEAD is now at 1546df9 learn log&diff

$git reset —-hard 444ece9	#回到版本 444ece9 creat git_learn_note.txt
HEAD is now at 444ece9 creat git_learn_note.txt
$git log --oneline
444ece9 creat git_learn_note.txt
54c3414 change 2
a8e9f53 change 1
f4ee17d change 1

$git reflog	#查看最近做的所有 HEAD 的改动, 并选择想要挽救的 commit id
444ece9 HEAD@{0}: reset: moving to 444ece9
1bf0694 HEAD@{1}: reset: moving to HEAD
1bf0694 HEAD@{2}: reset: moving to 1bf0694
54c3414 HEAD@{3}: reset: moving to HEAD
54c3414 HEAD@{4}: reset: moving to 54c3414
1bf0694 HEAD@{5}: reset: moving to HEAD
1bf0694 HEAD@{6}: commit (amend): 回到从前
cd0515e HEAD@{7}: commit: 回到从前
1546df9 HEAD@{8}: commit (amend): learn log&diff
7fed343 HEAD@{9}: commit (amend): learn log&diff
9e41999 HEAD@{10}: commit: learn log&diff
2dea039 HEAD@{11}: commit: git_learn_note change 1
444ece9 HEAD@{12}: commit: creat git_learn_note.txt
54c3414 HEAD@{13}: commit: change 2
a8e9f53 HEAD@{14}: commit: change 1
f4ee17d HEAD@{15}: commit (initial): change 1
$git reset —-hard 1bf0694	#回到future的版本
HEAD is now at 1bf0694 回到从前
$git log --oneline	#查看版本，发现已经挽救回来了
1bf0694 回到从前
1546df9 learn log&diff
2dea039 git_learn_note change 1
444ece9 creat git_learn_note.txt
54c3414 change 2
a8e9f53 change 1
f4ee17d change 1







